<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sist.web.dao.CourseDao">

	<!-- 코스 ResultMap -->
	<resultMap type="com.sist.web.model.Course" id="courseResultMap">
		<id column="COURSE_CODE" property="courseCode" />
		<result column="COURSE_NAME" property="courseName" />
		<result column="COURSE_DETAIL" property="courseDetail" />
		<result column="COURSE_PRICE" property="coursePrice" />
		<result column="COURSE_PAY_PRICE" property="coursePayPrice" />
		<result column="REG_DATE" property="regDate" />
		<result column="COURSE_STATUS" property="courseStatus" />
		<result column="USER_ID" property="userId" />
		<result column="USER_NAME" property="userName" />
		<result column="BOOK_SEQ" property="bookSeq" />
		<result column="LEC_CNT" property="lecCnt" />
		<result column="FIN_LEC_CNT" property="finLecCnt" />
		<result column="PLAY_DATE" property="playDate" />
		<result column="CLASS_CODE" property="classCode" />
		<result column="REVIEW_STAR" property="reviewStar" />
		<result column="REVIEW_CNT" property="reviewCnt" />
	</resultMap>
	
	<!-- 강의 ResultMap -->
	<resultMap type="com.sist.web.model.Lecture" id="lectureResultMap">
		<id column="FILE_NAME" property="fileName" />
		<result column="COURSE_CODE" property="courseCode" />
		<result column="LECTURE_NAME" property="lectureName" />
		<result column="CURRENT_TIME" property="currentTime" />
		<result column="DURATION_TIME" property="durationTime" />
		<result column="REG_DATE" property="regDate" />
		<result column="PLAY_DATE" property="playDate" />
	</resultMap>

	<!-- 시청 중인 강의 ResultMap -->
	<resultMap type="com.sist.web.model.Lecture" id="myLectureResultMap">
		<id column="FILE_NAME" property="fileName" />
		<id column="USER_ID" property="userId" />
		<result column="CURRENT_TIME" property="currentTime" />
		<result column="DURATION_TIME" property="durationTime" />
		<result column="PROGRESS" property="progress" />
		<result column="PLAY_DATE" property="playDate" />
	</resultMap>

	<!-- 코스 상세조회 -->
	<select id="courseSelect" parameterType="long" resultMap="courseResultMap">
		SELECT C.COURSE_CODE,
	       	   NVL(C.COURSE_NAME,'') AS COURSE_NAME,
		       NVL(C.COURSE_DETAIL,'') AS COURSE_DETAIL,
		       NVL(C.COURSE_PRICE,0) AS COURSE_PRICE,
		       NVL(C.COURSE_PAY_PRICE,0) AS COURSE_PAY_PRICE,
		       NVL(TO_CHAR(C.REG_DATE,'YYYY.MM.DD'),'') AS REG_DATE,
		       NVL(C.COURSE_STATUS,'') AS COURSE_STATUS,
		       NVL(C.USER_ID,'') AS USER_ID,
		       NVL(C.BOOK_SEQ,0) AS BOOK_SEQ,
		      (SELECT COUNT(FILE_NAME)
		         FROM EDU_LECTURE SL
		        WHERE SL.COURSE_CODE = C.COURSE_CODE) AS LEC_CNT
		  FROM EDU_COURSE C
		 WHERE COURSE_CODE = #{value}
	</select>
	
	<!-- 강의 목록 조회 -->
	<select id="lectureListSelect" parameterType="com.sist.web.model.Lecture" resultMap="lectureResultMap">
		SELECT L.FILE_NAME,
		       NVL(L.COURSE_CODE, 0) AS COURSE_CODE,
		       NVL(L.LECTURE_NAME, '') AS LECTURE_NAME,
		       NVL(TO_CHAR(L.REG_DATE, 'YYYY.MM.DD HH24:MI'), '') AS REG_DATE,
		       NVL(ML.CURRENT_TIME, 0) AS CURRENT_TIME,
		       NVL(ML.DURATION_TIME, 0) AS DURATION_TIME,
		       NVL(ML.PROGRESS, 0) AS PROGRESS,
		       NVL(TO_CHAR(ML.PLAY_DATE, 'YY.MM.DD'), '') AS PLAY_DATE
		  FROM EDU_LECTURE L, EDU_MY_LECTURE ML
		 WHERE L.FILE_NAME = ML.FILE_NAME(+)
		   AND ML.USER_ID(+) = #{userId}
		   AND L.COURSE_CODE = #{courseCode}
		 ORDER BY L.FILE_NAME ASC
	</select>
	
	<!-- 시청 중인 강의 select -->
	<select id="myLectureSelect" parameterType="com.sist.web.model.Lecture" resultMap="myLectureResultMap">
		SELECT USER_ID,
		       FILE_NAME,
		       NVL(CURRENT_TIME,0) CURRENT_TIME,
		       NVL(DURATION_TIME,0) DURATION_TIME,
		       NVL(PROGRESS, 0) AS PROGRESS,
		       NVL(TO_CHAR(PLAY_DATE,'YYYY.MM.DD HH24:MI:SS'),'') AS PLAY_DATE
		  FROM EDU_MY_LECTURE
		 WHERE USER_ID = #{userId}
		   AND FILE_NAME = #{fileName}
	</select>
	
	<!-- 시청 중인 강의 select (존재 여부) -->
	<select id="myLectureCntSelect" parameterType="com.sist.web.model.Lecture" resultType="int">
		SELECT COUNT(USER_ID)
		  FROM EDU_MY_LECTURE
		 WHERE USER_ID = #{userId}
		   AND FILE_NAME = #{fileName}
	</select>
	
	<!-- 시청 중인 강의 insert -->
	<insert id="myLectureInsert" parameterType="com.sist.web.model.Lecture">
		INSERT INTO EDU_MY_LECTURE (
		    USER_ID,
		    FILE_NAME,
		    CURRENT_TIME,
		    DURATION_TIME,
		    PROGRESS,
		    PLAY_DATE
		) VALUES (
			#{userId},
			#{fileName},
			#{currentTime},
			#{durationTime},
			#{progress},
			SYSDATE
		)
	</insert>
	
	<!-- 시청 중인 강의 update -->
	<update id="myLectureUpdate" parameterType="com.sist.web.model.Lecture">
		UPDATE EDU_MY_LECTURE
		   SET CURRENT_TIME = #{currentTime},
		       PROGRESS = #{progress},
		       PLAY_DATE = SYSDATE
		 WHERE USER_ID = #{userId}
		   AND FILE_NAME = #{fileName}
	</update>
	
	<!-- 완료된 강의 수 조회 -->
	<select id="finishLectureCntSelect" parameterType="com.sist.web.model.Lecture" resultType="int">
		SELECT COUNT(*)
		  FROM EDU_COURSE C, EDU_LECTURE L, EDU_MY_LECTURE ML
		 WHERE ML.USER_ID = #{userId}
		   AND C.COURSE_CODE = #{courseCode}
		   AND ML.PROGRESS = 100
		   AND C.COURSE_CODE = L.COURSE_CODE
		   AND L.FILE_NAME = ML.FILE_NAME
	</select>
	
	<!-- 코스 수강 여부 조회 -->
	<select id="myCourseSelect" parameterType="map" resultType="int">
		SELECT COUNT(USER_ID)
		  FROM EDU_MY_COURSE
		 WHERE USER_ID = #{userId}
		   AND COURSE_CODE = #{courseCode}
	</select>
	
	<!-- 모든 코스 수강 개수 조회 -->
	<select id="myCourseAllSelect" parameterType="String" resultType="int">
		SELECT COUNT(USER_ID)
		  FROM EDU_MY_COURSE
		 WHERE USER_ID = #{value}
		   AND COURSE_CODE IN (SELECT COURSE_CODE
                 				 FROM EDU_COURSE
                				WHERE COURSE_STATUS = 'Y')
	</select>
	
	<!-- 코스 수강 목록 추가 -->
	<insert id="myCourseInsert" parameterType="map">
		INSERT INTO EDU_MY_COURSE (
		    USER_ID,
		    COURSE_CODE,
		    PLAY_DATE
		) VALUES (
		    #{userId},
		    #{courseCode},
		    SYSDATE
		)
	</insert>
	
	<!-- 수강 중인 코스 수 -->
	<select id="myCourseIngSelect" parameterType="String" resultType="int">
		SELECT COUNT(MC.COURSE_CODE) AS CNT
		  FROM EDU_MY_COURSE MC
		 WHERE MC.USER_ID = #{value}
		   AND MC.COURSE_CODE NOT IN (
		       SELECT L.COURSE_CODE
		         FROM EDU_LECTURE L, EDU_MY_LECTURE ML
		        WHERE L.FILE_NAME = ML.FILE_NAME
		     GROUP BY L.COURSE_CODE
		       HAVING MIN(ML.PROGRESS) = 100)
           AND MC.COURSE_CODE IN (
               SELECT COURSE_CODE
                 FROM EDU_COURSE
                WHERE COURSE_STATUS = 'Y')
	</select>
	
	<!-- 수강 완료 코스 수 -->
	<select id="myCourseFinSelect" parameterType="String" resultType="int">
		SELECT COUNT(*) CNT
		  FROM (SELECT L.COURSE_CODE
		    	  FROM (SELECT COURSE_CODE, COUNT(FILE_NAME) AS LEC_CNT
		        		 FROM EDU_LECTURE
		        	 GROUP BY COURSE_CODE ) L, 
		        	   (SELECT L.COURSE_CODE, COUNT(ML.FILE_NAME) AS COMPLETE_CNT
		        		  FROM EDU_MY_LECTURE ML, EDU_LECTURE L
		        	     WHERE ML.PROGRESS = 100
		          		   AND ML.USER_ID = #{value}
		          		   AND ML.FILE_NAME = L.FILE_NAME
		        	  GROUP BY L.COURSE_CODE) ML
		         WHERE L.COURSE_CODE = ML.COURSE_CODE 
		     	   AND L.LEC_CNT = ML.COMPLETE_CNT
		  )
	</select>
	
	<!-- 수강 코스 list 개수 -->
	<select id="mypageCourseListCntSelect" parameterType="String" resultType="int">
		SELECT COUNT(USER_ID)
		  FROM EDU_MY_COURSE
		 WHERE USER_ID = #{value}
		   AND COURSE_CODE IN (
               SELECT COURSE_CODE
                 FROM EDU_COURSE
                WHERE COURSE_STATUS = 'Y')
	</select>
	
	<!-- MyPage 메인 화면 list 조회 -->
	<select id="mypageCourseListSelect" parameterType="com.sist.web.model.Course" resultMap="courseResultMap">
		SELECT COURSE_CODE,
	    	   COURSE_NAME,
	    	   USER_ID,
    		   USER_NAME,
    		   CLASS_CODE,
	    	   BOOK_SEQ,
	    	   LEC_CNT,
	    	   FIN_LEC_CNT,
	    	   PLAY_DATE
		 FROM (SELECT ROWNUM RNUM,
	                  COURSE_CODE,
	                  COURSE_NAME,
	                  USER_ID,
    				  USER_NAME,
    				  CLASS_CODE,
	                  BOOK_SEQ,
	                  LEC_CNT,
	                  FIN_LEC_CNT,
	                  PLAY_DATE
	            FROM (SELECT C.COURSE_CODE,
	                         C.COURSE_NAME,
	                         C.USER_ID,
	                         T.USER_NAME,
    						 T.CLASS_CODE,
	                         C.BOOK_SEQ,
	                        (SELECT NVL(COUNT(FILE_NAME), 0)
	                           FROM EDU_LECTURE
	                          WHERE COURSE_CODE = C.COURSE_CODE) AS LEC_CNT,
	                        (SELECT NVL(COUNT(SML.FILE_NAME), 0)
	                           FROM EDU_MY_LECTURE SML, EDU_LECTURE SL
	                          WHERE SML.PROGRESS = 100
	                            AND SML.USER_ID = #{userId}
	                            AND SL.COURSE_CODE = C.COURSE_CODE 
	                            AND SL.FILE_NAME = SML.FILE_NAME) AS FIN_LEC_CNT,
	                         NVL(TO_CHAR(MC.PLAY_DATE,'YYYY.MM.DD HH24:MI:SS'),'') AS PLAY_DATE
	                    FROM EDU_COURSE C, EDU_MY_COURSE MC, EDU_TEACHER T
	                   WHERE MC.USER_ID = #{userId}
					     AND C.COURSE_CODE IN (
			                 SELECT COURSE_CODE
			                   FROM EDU_COURSE
			                  WHERE COURSE_STATUS = 'Y')
	                   <if test="classCode > 0">
	                     AND T.CLASS_CODE = #{classCode}
	                   </if>
	                     AND C.COURSE_CODE IN (
	                         SELECT COURSE_CODE
	                           FROM EDU_MY_COURSE
	                          WHERE USER_ID = #{userId})
	                     AND C.COURSE_CODE = MC.COURSE_CODE
	                     AND C.USER_ID = T.USER_ID
	                    <if test="courseStatus eq 'recent'">
	                   ORDER BY MC.PLAY_DATE DESC NULLS LAST))
	                    </if>
	                    <if test="courseStatus eq 'teach'">
	                   ORDER BY T.USER_NAME NULLS LAST))
	                    </if>
		 WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>

	<!-- 코스당 현재 등록된 동영상 개수 조회 -->
	<select id="insertedLectureCnt" parameterType="long" resultType="int">
		SELECT COUNT(FILE_NAME) CNT
	  	  FROM EDU_LECTURE
		 WHERE COURSE_CODE = #{value}
	</select>	
	
	<!-- 강의 등록 -->
	<insert id="insertLecture" parameterType="map">
		INSERT INTO EDU_LECTURE (
				    COURSE_CODE,
				    LECTURE_NAME,
				    REG_DATE,
				    FILE_NAME
				) VALUES (
				    #{courseCode},
				    #{lectureName},
				    SYSDATE,
				    #{fileName}
				)
	</insert>
	
	<!-- 강의 삭제 -->
<!-- 	<delete id="delLecture" parameterType="String">
	DELETE FROM EDU_LECTURE
		  WHERE FILE_NAME = #{value}
	</delete> -->
	
	<!-- 등록 강의 조회 -->
	<select id="selectLec" parameterType="String" resultMap="myLectureResultMap">
	SELECT  COURSE_CODE,
	        LECTURE_NAME,
	        REG_DATE,
	        FILE_NAME
	   FROM EDU_LECTURE
	  WHERE FILE_NAME = #{value}
	</select>
	
	<!-- 강의 수정 -->
	<update id="updateLec" parameterType="com.sist.web.model.Lecture">
	UPDATE EDU_LECTURE
	   SET LECTURE_NAME = #{lectureName}
	 WHERE FILE_NAME = #{fileName}
	</update>
	
	
	<!-- MAX 강의파일이름 구하기 -->
<!-- 	<select id="maxFileName" parameterType="long" resultMap="lectureResultMap">
	SELECT  COURSE_CODE,
	        LECTURE_NAME,
	        REG_DATE,
	        FILE_NAME
	FROM    EDU_LECTURE
	WHERE   COURSE_CODE = #{value}
    AND     FILE_NAME = (
					       SELECT MAX(FILE_NAME)
					         FROM EDU_LECTURE
					        WHERE COURSE_CODE = #{value}
					    )
	</select> -->

	<!-- 수강신청한 코스 중 수강 중인 강의 수 조회 -->
	<select id="mycourseLectureSelect" parameterType="com.sist.web.model.Course" resultType="int">
	SELECT NVL(COUNT(ML.FILE_NAME), 0) AS CNT
	  FROM EDU_MY_LECTURE ML, EDU_LECTURE L
	 WHERE USER_ID = #{userId}
	   AND L.COURSE_CODE = #{courseCode}
	   AND ML.FILE_NAME = L.FILE_NAME
	</select>

	<!-- 마이페이지 수강 취소 -->
	<delete id="mycourseDelete" parameterType="com.sist.web.model.Course">
		DELETE FROM EDU_MY_COURSE
		 WHERE USER_ID = #{userId}
		   AND COURSE_CODE = #{courseCode}
	</delete>
	
	<!-- 모든 강좌 페이지 인기/후기순 LIST 조회 -->
	<select id="allCourseListSelect" parameterType="com.sist.web.model.Course" resultMap="courseResultMap">
		SELECT COURSE_CODE,
	    	   COURSE_NAME,
	    	   USER_ID,
    		   USER_NAME,
    		   CLASS_CODE,
	    	   BOOK_SEQ,
	    	   LEC_CNT,
               FIN_LEC_CNT,
               REVIEW_STAR,
               REVIEW_CNT
		 FROM (SELECT ROWNUM RNUM,
	                  COURSE_CODE,
	                  COURSE_NAME,
	                  USER_ID,
    				  USER_NAME,
    				  CLASS_CODE,
	                  BOOK_SEQ,
	                  LEC_CNT,
                      FIN_LEC_CNT,
                      REVIEW_STAR,
                      REVIEW_CNT
	            FROM (SELECT C.COURSE_CODE,
	                         C.COURSE_NAME,
	                         C.USER_ID,
	                         T.USER_NAME,
    						 T.CLASS_CODE,
	                         C.BOOK_SEQ,
	                        (SELECT NVL(COUNT(FILE_NAME), 0)
	                           FROM EDU_LECTURE
	                          WHERE COURSE_CODE = C.COURSE_CODE) AS LEC_CNT,
                            (SELECT NVL(COUNT(*), 0)
                               FROM EDU_MY_COURSE SMC
                              WHERE SMC.COURSE_CODE = C.COURSE_CODE) AS FIN_LEC_CNT,
                            (SELECT NVL(ROUND(AVG(BRD_RATING),2), 0)
                               FROM EDU_COURSE_REVIEW
                              WHERE COURSE_CODE = C.COURSE_CODE) AS REVIEW_STAR,
                            (SELECT NVL(COUNT(BRD_SEQ),0)
                               FROM EDU_COURSE_REVIEW
                              WHERE COURSE_CODE = C.COURSE_CODE) AS REVIEW_CNT
	                    FROM EDU_COURSE C, EDU_TEACHER T
	                   WHERE C.USER_ID = T.USER_ID
					     AND C.COURSE_CODE IN (
			                 SELECT COURSE_CODE
			                   FROM EDU_COURSE
			                  WHERE COURSE_STATUS = 'Y')
	                   <if test="courseStatus eq 'popular'">
	                   ORDER BY FIN_LEC_CNT DESC NULLS LAST))
	                   </if>
	                   <if test="courseStatus eq 'review'">
	                   ORDER BY REVIEW_STAR DESC, REVIEW_CNT DESC NULLS LAST))
	                   </if>
		 WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<!-- 모든 강좌 LIST COUNT SELECT -->
	<select id="allCourseClassListCntSelect" parameterType="int" resultType="int">
		SELECT COUNT(C.USER_ID) AS CNT
		  FROM EDU_COURSE C, EDU_TEACHER T
		 WHERE T.CLASS_CODE = #{value}
		   AND C.USER_ID = T.USER_ID
	       AND C.COURSE_CODE IN (
               SELECT COURSE_CODE
                 FROM EDU_COURSE
                WHERE COURSE_STATUS = 'Y')
	</select>
	
	<!-- 모든 강좌 LIST SELECT -->
	<select id="allCourseClassListSelect" parameterType="com.sist.web.model.Course" resultMap="courseResultMap">
		SELECT USER_ID,
		       USER_NAME,
		       COURSE_CODE,
		       COURSE_NAME,
		       CLASS_CODE,
		       REG_DATE,
		       LEC_CNT
		 FROM (SELECT ROWNUM RNUM,
		              USER_ID,
		              USER_NAME,
		              COURSE_CODE,
		              COURSE_NAME,
		              CLASS_CODE,
		              REG_DATE,
		              LEC_CNT
		        FROM (SELECT C.USER_ID,
		                     NVL(T.USER_NAME, 0) AS USER_NAME,
		                     NVL(C.COURSE_CODE, 0) AS COURSE_CODE,
		                     NVL(C.COURSE_NAME, 0) AS COURSE_NAME,
		                     NVL(T.CLASS_CODE, 0) AS CLASS_CODE,
		                     NVL(TO_CHAR(C.REG_DATE,'YYYY.MM.DD HH24:MI:SS'),'') AS REG_DATE,
		                    (SELECT NVL(COUNT(FILE_NAME), 0)
		                       FROM EDU_LECTURE
		                      WHERE COURSE_CODE = C.COURSE_CODE) AS LEC_CNT
		                FROM EDU_COURSE C, EDU_TEACHER T
		               WHERE T.CLASS_CODE = #{classCode}
		                 AND C.USER_ID = T.USER_ID
		               ORDER BY REG_DATE DESC))
		 WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<!-- 강사의 총 강의 수 조회 -->
	<select id="teachLectureCnt" parameterType="String" resultType="int">
		SELECT NVL(COUNT(FILE_NAME), 0) AS CNT
		  FROM EDU_LECTURE
		 WHERE COURSE_CODE IN (
		       SELECT COURSE_CODE
		         FROM EDU_COURSE
		        WHERE USER_ID = #{value})
	</select>
</mapper>
