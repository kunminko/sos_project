<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sist.web.dao.TeachDao">

	<!--  강사 정보 resultMap -->
	<resultMap type="com.sist.web.model.Teacher" id="teacherResultMap">
		<id column="USER_ID" property="userId" />
		<result column="USER_PWD" property="userPwd" />
		<result column="USER_EMAIL" property="userEmail" />
		<result column="USER_NAME" property="userName" />
		<result column="USER_PHONE" property="userPhone" />
		<result column="ADDR_CODE" property="addrCode" />
		<result column="ADDR_BASE" property="addrBase" />
		<result column="ADDR_DETAIL" property="addrDetail" />
		<result column="STATUS" property="status" />
		<result column="RATING" property="rating" />
		<result column="REG_DATE" property="regDate" />
		<result column="USER_PROFILE" property="userProfile" />
		<result column="USER_INTRO" property="userIntro" />
		<result column="USER_DEGREE" property="userDegree" />
		<result column="USER_CAREER" property="userCareer" />
		<result column="CLASS_CODE" property="classCode" />
		<result column="MOD_DATE" property="modDate" />
	</resultMap>

	<!-- 강사 코스 resultMap -->
	<resultMap type="com.sist.web.model.Course" id="courseResultMap">
		<id column="COURSE_CODE" property="courseCode" />
		<result column="COURSE_NAME" property="courseName" />
		<result column="COURSE_DETAIL" property="courseDetail" />
		<result column="COURSE_PRICE" property="coursePrice" />
		<result column="COURSE_PAY_PRICE" property="coursePayPrice" />
		<result column="REG_DATE" property="regDate" />
		<result column="COURSE_STATUS" property="courseStatus" />
		<result column="USER_ID" property="userId" />
		<result column="BOOK_SEQ" property="bookSeq" />
		<result column="LEC_CNT" property="lecCnt" />
		<result column="FIN_LEC_CNT" property="finLecCnt" />
	</resultMap>

	<!-- 게시판 리스트 resultMap -->



	<!-- 과목별 강사 조회 -->
	<select id="teacherListSelect" parameterType="int" resultMap="teacherResultMap">
		SELECT USER_ID,
			   NVL(USER_PWD, '') USER_PWD, 
			   NVL(USER_EMAIL, '') USER_EMAIL, 
			   NVL(USER_NAME, '') USER_NAME, 
			   NVL(USER_PHONE, '') USER_PHONE, 
			   NVL(ADDR_CODE, '') ADDR_CODE, 
			   NVL(ADDR_BASE, '') ADDR_BASE, 
			   NVL(ADDR_DETAIL, '') ADDR_DETAIL, 
			   NVL(STATUS, 'N') STATUS, 
			   NVL(RATING, '') RATING, 
			   NVL(TO_CHAR(REG_DATE, 'YYYY.MM.DD HH24:MI:SS'), '') REG_DATE, 
			   NVL(USER_PROFILE, '') USER_PROFILE, 
			   NVL(USER_INTRO, '') USER_INTRO, 
			   NVL(USER_DEGREE, '') USER_DEGREE, 
			   NVL(USER_CAREER, '') USER_CAREER, 
			   NVL(CLASS_CODE, '') CLASS_CODE,
			   NVL(TO_CHAR(MOD_DATE,'YYYY.MM.DD HH24:MI:SS'),'') AS MOD_DATE
		  FROM EDU_TEACHER
		 WHERE CLASS_CODE = #{value}
		   AND STATUS = 'Y'
		 ORDER BY USER_NAME		   
	</select>

	<!-- 과목별 강사 수 조회 -->
	<select id="teacherListCount" parameterType="int" resultType="long">
		SELECT COUNT(USER_ID)
		  FROM EDU_TEACHER
		 WHERE CLASS_CODE = #{value}
	</select>

	<!-- 강사 조회 -->
	<select id="teacherSelect" parameterType="String" resultMap="teacherResultMap">
		SELECT USER_ID,
		       NVL(USER_PWD, '') AS USER_PWD,
		       NVL(USER_EMAIL, '') AS USER_EMAIL,
		       NVL(USER_NAME, '') AS USER_NAME,
		       NVL(USER_PHONE, '') AS USER_PHONE,
		       NVL(ADDR_CODE, '') AS ADDR_CODE,
		       NVL(ADDR_BASE, '') AS ADDR_BASE,
		       NVL(ADDR_DETAIL, '') AS ADDR_DETAIL,
		       NVL(STATUS, 'N') AS STATUS,
		       NVL(RATING, 'N') AS RATING,
		       NVL(TO_CHAR(REG_DATE,'YYYY.MM.DD HH24:MI:SS'),'') AS REG_DATE,
		       NVL(USER_PROFILE, '') AS USER_PROFILE,
		       NVL(USER_INTRO, '') AS USER_INTRO,
		       NVL(USER_DEGREE, '') AS USER_DEGREE,
		       NVL(USER_CAREER, '') AS USER_CAREER,
		       NVL(CLASS_CODE, '') AS CLASS_CODE,
		       NVL(TO_CHAR(MOD_DATE,'YYYY.MM.DD HH24:MI:SS'),'') AS MOD_DATE
		  FROM EDU_TEACHER
		 WHERE USER_ID = #{value}
	</select>

	<!-- 강사 코스 수 조회 -->
	<select id="teacherCourseCnt" parameterType="String" resultType="int">
		SELECT COUNT(COURSE_CODE)
		  FROM EDU_COURSE
		 WHERE USER_ID = #{value}
		   AND COURSE_STATUS IN ('Y','N')
	</select>

	<!-- 강사 코스 리스트 조회 -->
	<select id="teacherCourseListSelect" parameterType="com.sist.web.model.Course" resultMap="courseResultMap">
		SELECT COURSE_CODE,
		       COURSE_NAME,
		       COURSE_DETAIL,
		       COURSE_PRICE,
		       COURSE_PAY_PRICE,
		       REG_DATE,
		       COURSE_STATUS,
		       USER_ID,
		       BOOK_SEQ,
		       LEC_CNT
		  FROM(SELECT ROWNUM RNUM,
		              COURSE_CODE,
		              COURSE_NAME,
		              COURSE_DETAIL,
		              COURSE_PRICE,
		              COURSE_PAY_PRICE,
		              REG_DATE,
		              COURSE_STATUS,
		              USER_ID,
		              BOOK_SEQ,
		              LEC_CNT
		        FROM(SELECT NVL(C.COURSE_CODE, 0) AS COURSE_CODE,
		                    NVL(C.COURSE_NAME, '') AS COURSE_NAME,
		                    NVL(C.COURSE_DETAIL, '') AS COURSE_DETAIL,
		                    NVL(C.COURSE_PRICE, 0) AS COURSE_PRICE,
		                    NVL(C.COURSE_PAY_PRICE, 0) AS COURSE_PAY_PRICE,
		                    NVL(TO_CHAR(C.REG_DATE,'YYYY.MM.DD HH24:MI:SS'),'') AS REG_DATE,
		                    NVL(C.COURSE_STATUS, '') AS COURSE_STATUS,
		                    NVL(C.USER_ID, '') AS USER_ID,
		                    NVL(C.BOOK_SEQ, 0) AS BOOK_SEQ,
		                   (SELECT COUNT(FILE_NAME)
		                      FROM EDU_LECTURE SL
		                     WHERE SL.COURSE_CODE = C.COURSE_CODE) AS LEC_CNT
		               FROM EDU_COURSE C
		              WHERE C.USER_ID = #{userId}
		                AND C.COURSE_STATUS IN ('Y','N')
		           ORDER BY C.COURSE_CODE DESC))
		 WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	

	
	<!-- 강사 최근 코스 리스트 조회 -->
	<select id="teacherRecentCourseListSelect" parameterType="String" resultMap="courseResultMap">
		SELECT COURSE_CODE,
		       COURSE_NAME,
		       COURSE_DETAIL,
		       COURSE_PRICE,
		       COURSE_PAY_PRICE,
		       REG_DATE,
		       COURSE_STATUS,
		       USER_ID,
		       BOOK_SEQ,
		       LEC_CNT
		  FROM(SELECT ROWNUM RNUM,
		              COURSE_CODE,
		              COURSE_NAME,
		              COURSE_DETAIL,
		              COURSE_PRICE,
		              COURSE_PAY_PRICE,
		              REG_DATE,
		              COURSE_STATUS,
		              USER_ID,
		              BOOK_SEQ,
		              LEC_CNT
		        FROM(SELECT NVL(C.COURSE_CODE, 0) AS COURSE_CODE,
		                    NVL(C.COURSE_NAME, '') AS COURSE_NAME,
		                    NVL(C.COURSE_DETAIL, '') AS COURSE_DETAIL,
		                    NVL(C.COURSE_PRICE, 0) AS COURSE_PRICE,
		                    NVL(C.COURSE_PAY_PRICE, 0) AS COURSE_PAY_PRICE,
		                    NVL(TO_CHAR(C.REG_DATE,'YYYY.MM.DD HH24:MI:SS'),'') AS REG_DATE,
		                    NVL(C.COURSE_STATUS, '') AS COURSE_STATUS,
		                    NVL(C.USER_ID, '') AS USER_ID,
		                    NVL(C.BOOK_SEQ, 0) AS BOOK_SEQ,
		                   (SELECT COUNT(FILE_NAME)
		                      FROM EDU_LECTURE SL
		                     WHERE SL.COURSE_CODE = C.COURSE_CODE) AS LEC_CNT
		               FROM EDU_COURSE C
		              WHERE C.USER_ID = #{value}
		                AND C.COURSE_STATUS IN ('Y','N')
		           ORDER BY C.REG_DATE DESC))
		 
	</select>
	
	<!-- 강사 코스 등록 -->
	<insert id="courseInsert" parameterType="com.sist.web.model.Course">
	
		<selectKey resultType="long" keyProperty="courseCode" order="BEFORE">
			SELECT EDU_COURSE_CODE.NEXTVAL FROM DUAL
		</selectKey>
	
			INSERT INTO EDU_COURSE (
					    COURSE_CODE,
					    COURSE_NAME,
					    COURSE_DETAIL,
					    COURSE_PRICE,
					    COURSE_PAY_PRICE,
					    REG_DATE,
					    COURSE_STATUS,
					    USER_ID,
					    BOOK_SEQ
					) VALUES (
					    #{courseCode},
					    #{courseName},
					    #{courseDetail},
					    0,
					    0,
					    SYSDATE,
					    'N',
					    #{userId},
					    #{bookSeq}
					)
	
	</insert>
	
	<!-- 코스 삭제 업데이트 -->
	<update id="courseDel" parameterType="long">
		UPDATE EDU_COURSE
		SET COURSE_STATUS = 'D'
		WHERE COURSE_CODE = #{value}
	</update>	
		
	<!-- 코스조회 -->
	<select id="courseSelect" parameterType="long" resultMap="courseResultMap">
		SELECT  NVL(COURSE_CODE, '') COURSE_CODE,
		        NVL(COURSE_NAME, '') COURSE_NAME,
		        NVL(COURSE_DETAIL, '') COURSE_DETAIL,
		        NVL(COURSE_PRICE, '') COURSE_PRICE,
		        NVL(COURSE_PAY_PRICE, '') COURSE_PAY_PRICE,
		        NVL(TO_CHAR(REG_DATE, 'YYYY.MM.DD HH24:MI:SS'), '') REG_DATE,
		        NVL(COURSE_STATUS, 'N') COURSE_STATUS,
		        NVL(USER_ID, '') USER_ID,
		        NVL(BOOK_SEQ, '') BOOK_SEQ
		FROM    EDU_COURSE
		WHERE	COURSE_CODE = #{value}
	</select>
	
	<!-- 강사 정보 수정 -->
	<update id="teachUpdate" parameterType="com.sist.web.model.Teacher">
	    UPDATE EDU_TEACHER
	       SET USER_INTRO = #{userIntro},
			   USER_DEGREE = #{userDegree},
			   USER_CAREER = #{userCareer}
	     WHERE USER_ID = #{userId}
    </update>
	
	<!-- 강사 인기 코스 리스트 조회 -->
	<select id="teacherPopularCourseListSelect" parameterType="String" resultMap="courseResultMap">
		SELECT COURSE_CODE,
		       COURSE_NAME,
		       COURSE_DETAIL,
		       COURSE_PRICE,
		       COURSE_PAY_PRICE,
		       REG_DATE,
		       COURSE_STATUS,
		       USER_ID,
		       BOOK_SEQ,
		       LEC_CNT,
		       FIN_LEC_CNT
		  FROM(SELECT ROWNUM RNUM,
		              COURSE_CODE,
		              COURSE_NAME,
		              COURSE_DETAIL,
		              COURSE_PRICE,
		              COURSE_PAY_PRICE,
		              REG_DATE,
		              COURSE_STATUS,
		              USER_ID,
		              BOOK_SEQ,
		              LEC_CNT,
		              FIN_LEC_CNT
		        FROM(SELECT NVL(C.COURSE_CODE, 0) AS COURSE_CODE,
		                    NVL(C.COURSE_NAME, '') AS COURSE_NAME,
		                    NVL(C.COURSE_DETAIL, '') AS COURSE_DETAIL,
		                    NVL(C.COURSE_PRICE, 0) AS COURSE_PRICE,
		                    NVL(C.COURSE_PAY_PRICE, 0) AS COURSE_PAY_PRICE,
		                    NVL(TO_CHAR(C.REG_DATE,'YYYY.MM.DD HH24:MI:SS'),'') AS REG_DATE,
		                    NVL(C.COURSE_STATUS, '') AS COURSE_STATUS,
		                    NVL(C.USER_ID, '') AS USER_ID,
		                    NVL(C.BOOK_SEQ, 0) AS BOOK_SEQ,
		                   (SELECT NVL(COUNT(FILE_NAME), 0)
		                      FROM EDU_LECTURE SL
		                     WHERE SL.COURSE_CODE = C.COURSE_CODE) AS LEC_CNT,
		                   (SELECT NVL(COUNT(*), 0)
		                      FROM EDU_MY_COURSE SMC
		                     WHERE SMC.COURSE_CODE = C.COURSE_CODE) AS FIN_LEC_CNT
		               FROM EDU_COURSE C
		              WHERE C.USER_ID = #{value}
		                AND C.COURSE_STATUS = 'Y'
		           ORDER BY FIN_LEC_CNT DESC, C.REG_DATE DESC))
		 WHERE RNUM BETWEEN 1 AND 3
	</select>

	<!--  -->

</mapper>
